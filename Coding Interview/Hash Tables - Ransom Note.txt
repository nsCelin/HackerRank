1. A kidnapper wrote a ransom note but is worried it will be traced back to him. He found a magazine and wants to know if he can cut out whole words from it and use them to create an untraceable replica of his ransom note. The words in his note are case-sensitive and he must use whole words available in the magazine, meaning he cannot use substrings or concatenation to create the words he needs.

Given the words in the magazine and the words in the ransom note, print Yes if he can replicate his ransom note exactly using whole words from the magazine; otherwise, print No.

Input Format

The first line contains two space-separated integers describing the respective values of  (the number of words in the magazine) and  (the number of words in the ransom note). 
The second line contains  space-separated strings denoting the words present in the magazine. 
The third line contains  space-separated strings denoting the words present in the ransom note.

Constraints

. 1<=m, n<= 30000
. 1<=length of any word <=5
. Each word consists of English alphabetic letters (i.e., a to z and A to Z).
. The words in the note and magazine are case-sensitive.

Output Format

Print Yes if he can use the magazine to create an untraceable replica of his ransom note; otherwise, print No.

Sample Input 0
6 4
give me one grand today night
give one grand today

Sample Output 0
Yes

Sample Output 1
6 5
two times three is not four
two times two is four

Sample Output 1
No

Explanation 1
two should occur 2 times in magazine

Answer

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.util.Map.Entry;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int m = in.nextInt();
        int n = in.nextInt();
        
        Solution s = new Solution();
        Map<String,Integer> magazine = s.buildMap(in, m);
        Map<String,Integer> ransom = s.buildMap(in, n);
                 
        System.out.println(s.compare(magazine, ransom)? "Yes" : "No");
    }
    
    public boolean compare(Map<String,Integer> magazine, Map<String,Integer> ransom)
    {
        /*Ransom has to be checked against magazine, as we need to check whether values inside Ransom is there with Magazine.*/
        for (Entry<String, Integer> entry : ransom.entrySet())
        {
            /*Checks if the ransom's key is available on the Magazine array*/
            if(!magazine.containsKey(entry.getKey()) ||
                 /*magazine.get(entry.getKey()) is used to fetch the Value from Magazine. 
                 Checks if the entry's value is greater than magazine, which exits the loop and returns false*/
                 magazine.get(entry.getKey()) < entry.getValue())
            {
                return false;
            }            
        }
        return true;
    }
    
    public Map<String,Integer> buildMap (Scanner in, int m)
    {
        Map<String,Integer> _magazine = new HashMap<String,Integer>();
        //This loop iterates and fetches the next values in string which is the magazine and ransom string itself
        for(int magazine_i=0; magazine_i < m; magazine_i++){
            
            /*fetch the next value from scanner*/
            String mag_value = in.next();
            
            /*If the input is not present in Map, then insert the key and values into Map*/
            if(!_magazine.containsKey(mag_value))
                _magazine.put(mag_value,0);
            else
            {
                /*If the value is already available in the Map, then update the count of the values in Map
                Map.get(KeyValue) is used to fetch the value of existing Key. 
                Next the value is incremented by 1*/
                _magazine.put(mag_value,_magazine.get(mag_value)+1);
            }
        }
        return _magazine;
    }
}


/*In Jaba 7*/
/*import java.util.*;

public class Solution {
    Map<String, Integer> magazineMap;
    Map<String, Integer> noteMap;
    
    public Solution(String magazine, String note) {
        String[] _magazine = magazine.split(" ");
        for(String m : _magazine)
        {
            System.out.println(m);
        }
        
    }
    
    public boolean solve() {
        return true;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int m = scanner.nextInt();
        int n = scanner.nextInt();
        
        // Eat whitespace to beginning of next line
        scanner.nextLine();
        
        Solution s = new Solution(scanner.nextLine(), scanner.nextLine());
        scanner.close();
        
        boolean answer = s.solve();
        if(answer)
            System.out.println("Yes");
        else System.out.println("No");
      
    }
}*/


